2+2
(115+44)*209
2333*27
install.packages("data.table")
V1 <- c(1L,2L)
V1
V1 <- c(1,2)
V1
install.packages("shiny")
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
40*52*75
last.prime <- 2L
last.prime
class(last.prime)
last.prime1 <- 2
class(last.prime1)
floor(sqrt(7))
floor(sqrt(9))
?seq.int
n=25
primes <- rep(TRUE, n)
primes
primes[1] <- FALSE
last.prime <- 2L
last.prime:floor(sqrt(n))
seq.int(2L*last.prime, n, last.prime)
primes[seq.int(2L*last.prime, n, last.prime)] <- FALSE
primes
primes[(last.prime+1):n]
which(primes[(last.prime+1):n])
min(which(primes[(last.prime+1):n]))
last.prime <- last.prime + min(which(primes[(last.prime+1):n]))
last.prime
primes[seq.int(2L*last.prime, n, last.prime)]
seq.int(2L*last.prime, n, last.prime)
primes[seq.int(2L*last.prime, n, last.prime)] <- FALSE
min(which(primes[(last.prime+1):n]))
primes[(last.prime+1):n]
which(primes[(last.prime+1):n])
last.prime
(last.prime+1):n
primes[(last.prime+1):n]
which(primes[(last.prime+1):n])
last.prime + min(which(primes[(last.prime+1):n]))
last.prime <- last.prime + min(which(primes[(last.prime+1):n]))
primes <- rep(TRUE, n)
primes[1] <- FALSE
last.prime <- 2L
for(i in last.prime:floor(sqrt(n)))
{
primes[seq.int(2L*last.prime, n, last.prime)] <- FALSE
last.prime <- last.prime + min(which(primes[(last.prime+1):n]))
}
which(primes)
?seq_along
seq_along(3:4)
seq_along(7:11)
seq.int(5:10)
seq(4,11)
seq(4,11,by=2)
rows <- list(3:4,5:6)
rows
for (i in seq_along(rows)) {
print(i)
}
seq_along(rows)
rows <- list(3:40,5:6)
for (i in seq_along(rows)) {
print(i)
}
rows <- list(3:40,50:600)
for (i in seq_along(rows)) {
print(i)
}
rows <- list(3:40,50:600,7:10)
for (i in seq_along(rows)) {
print(i)
}
rows <- c(2,3,5)
for (i in seq_along(rows)) {
print(i)
}
rows <- c(20,30,50)
for (i in seq_along(rows)) {
print(i)
}
head(airquality)
data()
install.packages()
installed.packages()
x <- as.data.frame(installed.packages())
dim(x)
View(x)
data(datasets)
data("datasets")
data(package = "datasets")
data(package = "data.table")
data(package = "MASS")
data(package = "shiny")
data()
head(airquality)
str(airquality)
apply(head(airquality),1,function(x) mean(x[5:6]))
apply(head(airquality),2,function(x) mean(x[5:6]))
?apply
apply(head(airquality),2,function(x) mean)
install.packages("dplyr")
install.packages("data.table")
head(airquality)
library(dplyr)
library(data.table)
head(airquality)
summarise(group_by(airquality,Month),mean(Temp, na.rm = TRUE))
sample_n(airquality,10)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
load(file=con)
close(con)
mp = montpick.eset
dim(mp)
mp
pdata=pData(mp)
edata=as.data.frame(exprs(mp))
fdata = fData(mp)
biocLite(c("Biobase","sva","bladderbatch","snpStats"))
?xxt
library(sva)
?xxt
library(snpStats)
?xxt
dim(edata)
m_pca <- prcomp(edata,scale. = T)
out <- m_pca$x
summary(m_pca)
0.03*100
dim(edata)
edata[1,1:5]
log2(edata[1,])
log2(edata[1,1:5])
edata_log2 <- log2(edata[,])
edata_log2[1,1:5]
m_pca2 <- prcomp(edata_log2,scale. = T)
out <- m_pca2$x
summary(m_pca2)
edata_log2 <- log2(edata[,]+1)
m_pca2 <- prcomp(edata_log2,scale. = T)
out <- m_pca2$x
summary(m_pca2)
edata3 <- log2(edata[,]+1) - rowMeans(edata)
m_pca3 <- prcomp(edata3,scale. = T)
summary(m_pca3)
edata3 <- log2(edata[,]+1)
edata3 <- edata3[,] - rowMeans(edata3)
m_pca3 <- prcomp(edata3,scale. = T)
summary(m_pca3)
edata3 <- log2(edata[,]+1)
edata3 <- edata3[,] - rowMeans(edata3[,])
m_pca3 <- prcomp(edata3,scale. = T)
summary(m_pca3)
11/14
9000/9200
55.6*83.3/(55.6+83.3)
55.6*83.3
55.6*83.3/(55.6+83.3)
1/12
11/13
10/13
230*159
230*259
ln(1/0)
4/5
ln(0.8/0.2)
log(0.8/0.2)
7/8
log(0.875/(1-0.875))
log(1)
6/8
log(0.75/0.25)
2/8
log(0.25/0.75)
install.packages("rmarkdown")
x <- rnorm(1000)
plot(density(x))
x <- rnorm(10000)
plot(density(x))
x <- rnorm(100000)
plot(density(x))
sigmoid <- function(x) {
1/1+exp(-x)
}
sigmoid(0)
sigmoid <- function(x) {
1/(1+exp(-x))
}
sigmoid(0)
sigmoid(10)
sigmoid(10000)
sigmoid(1000000000000)
sigmoid(-1000000000000)
z <- seq(-1000,1000)
z
density(sigmoid(z))
plot(density(sigmoid(z)))
plot(sigmoid(z))
curve(sigmoid(z))
curve(sigmoid, -1000, 1000)
curve(sigmoid, -10, 10)
curve(sigmoid, -5, 5)
log(-5)
sin(-5)
cos(-5)
curve(sin,-10,10)
curve(cos,-10,10)
curve(log,-10,10)
curve(exp,-10,10)
exp(1)
exp(2)
exp(-5)
exp(5)
2.7**5
2.71**5
2.713**5
2.713**-5
300*260
22/40
0.55*166
176*0.55
115*269
z <- seq(-1000,1000)
curve(sigmoid, -5, 5)
sigmoid <- function(x) {
1/(1+exp(-x))
}
z <- seq(-1000,1000)
curve(sigmoid, -5, 5)
curve(sin,-10,10)
curve(cos,-10,10)
curve(log,-10,10)
curve(exp,-10,10)
curve(log,-10,10)
curve(sin,-10,10)
curve(cos,-10,10)
sigmoid <- function(x) {
1/(1+exp(-x))
}
sigmoid(2.4)
sigmoid(3*0.4+5*0.6-2.2)
sigmoid(5*0.4+4*0.6-3)
?plot
x1 <- seq(1:10)
x1
x2 <- seq(21:30)
plot(x1,x2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data("midwest")
dim(midwest)
View(midwest)
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm")  # set se=FALSE to turnoff confidence bands
g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
?lm
attach(midwest)
lm(poptotal~area,midwest)
g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
sigmoid(2)
sigmoid <- function(x) {
1/(1+exp(-x))
}
sigmoid(2)
sigmoid(-22)
sigmoid(20)
33.33*24
3287-3165
27*27
sigmoid <- function(x) {
1/(1+exp(-x))
}
z <- seq(-1000,1000)
curve(sigmoid, -5, 5)
log(2.71)
log(2.72)
log(2.713)
log(2.7139)
log(2.714)
log(2.715)
log(2.716)
log(2.719)
log(2.718)
log(2.7189)
log(2.7187)
log(2.7186)
log(2.7184)
log(2.7182)
log(2.7183)
log(2.71825)
log(2.71829)
log(2.71828)
log(2.718289)
log(2.718288)
log(2.718287)
log(2.718286)
log(2.718282)
sigmoid(2)
yi = 1
y_hat = sigmoid(2)
yi*log(y_hat) + (1 - yi)*log(1 - y_hat)
yi1 = 1
yi2 = 0
y_hat1 = sigmoid(2)
y_hat2 = sigmoid(-2)
yi1*log(y_hat1) + (1 - yi1)*log(1 - y_hat1) + yi2*log(y_hat2) + (1 - yi2)*log(1 - y_hat2)
yi1 = 1
yi2 = 0
y_hat1 = sigmoid(20)
y_hat2 = sigmoid(-20)
yi1*log(y_hat1) + (1 - yi1)*log(1 - y_hat1) + yi2*log(y_hat2) + (1 - yi2)*log(1 - y_hat2)
32*9
32*27
864+32
curve(exp,-10,10)
x1 <- seq(1:10)
x2 <- seq(21:30)
data("midwest")
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm")  # set se=FALSE to turnoff confidence bands
# Delete the points outside the limits
g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
yi1 = 1
yi2 = 0
y_hat1 = sigmoid(20)
y_hat2 = sigmoid(-20)
sigmoid <- function(x) {
1/(1+exp(-x))
}
z <- seq(-1000,1000)
0.003*12
0.315*12
(208-16)/16
208-16
192/16
192/48
25/60
67 + 91 + 92 + 74 + 63 + 106 + 95
588/60
8
8**2
16**2
2**8
2**6
2**5
2**7
2**7+2**6+2**5
2**7+2**6+2**0
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
library(shiny); source('Documents/SDTM-Scripts/R-Scripts/SDTMinator/runApplication.R')
runApp('Documents/SDTM-Scripts/R-Scripts/SDTMinator')
setwd("~/Documents/SDTMinator")
library(shiny); source('runApplication.R')
source('runApplication.R')
source('runApplication.R')
data_file <- "./data/UC_public/UC_public_studies_surgery.txt"
data <- read.table(data_file,fill=TRUE,header=TRUE,sep="\t",comment.char = "",row.names=NULL,quote="\"",colClasses="character",check.names=FALSE)
View(data)
mapper_file <- "./data/UC_public/UC_public_studies_MappingFile.txt"
mapper <- read.table(mapper_file,sep="\t",header=TRUE,quote="\"",colClasses="character")
View(mapper)
mapper[which(mapper$Domain == "PR",]
mapper[which(mapper$Domain == "PR"),]
domains <- unlist(strsplit(domainToConsider,";"))
source('runApplication.R')
domainToConsider <- "./data/UC_public/PR"
unlist(strsplit(domainToConsider,";"))
domainToConsider <- "./data/UC_public/RS;CM;HO;EX"
unlist(strsplit(domainToConsider,";"))
source('runApplication.R')
source('runApplication.R')
