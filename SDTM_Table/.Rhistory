unique(tbl_asthma$USUBJID)
library(data.table)
filename_asth <- "./Asthma/DM.txt"
tbl_asthma <- fread(filename_asth)
filename_mm <- "./Multiple_myeloma/DM.txt"
tbl_mm <- fread(filename_mm)
asth_subjs <- length(unique(tbl_asthma$USUBJID))
mm_subjs <- length(unique(tbl_mm$USUBJID))
asth_subjs
mm_subjs
sample(1:asth_subjs,1)
asth_has <- sample(1:asth_subjs,1)
asth_subjs - asth_has
asth_has
library(data.table)
filename_asth <- "./Asthma/DM.txt"
tbl_asthma <- fread(filename_asth)
filename_mm <- "./Multiple_myeloma/DM.txt"
tbl_mm <- fread(filename_mm)
asth_subjs <- length(unique(tbl_asthma$USUBJID))
mm_subjs <- length(unique(tbl_mm$USUBJID))
asth_has <- sample(1:asth_subjs,1)
asth_doesNot <- asth_subjs - asth_has
mm_has <- sample(1:mm_subjs,1)
mm_doesNot <- mm_subjs - mm_has
df <- data.frame(matrix("",nrow = 2,ncol = 2))
df <- data.frame(matrix("",nrow = 2,ncol = 2))
df[1,1] <- mm_has
df[1,2] <- asth_has
df[2,1] <- mm_doesNot
df[2,2] <- asth_doesNot
df <- data.frame(matrix("",nrow = 2,ncol = 2),stringsAsFactors = FALSE)
df[1,1] <- mm_has
df[1,2] <- asth_has
df[2,1] <- mm_doesNot
df[2,2] <- asth_doesNot
View(df)
tab <- table(df)
tab
df <- data.frame(matrix("",nrow = 2,ncol = 2),stringsAsFactors = FALSE,row.names = FALSE)
df[1,1] <- mm_has
df[1,2] <- asth_has
df[2,1] <- mm_doesNot
df[2,2] <- asth_doesNot
tab <- table(df)
View(mydata)
df <- data.frame(matrix("",nrow = 2,ncol = 2),stringsAsFactors = FALSE)
View(df)
df <- data.frame(matrix("",nrow = 2,ncol = 2),stringsAsFactors = FALSE)
colnames(df) <- c("control","case")
df[1,1] <- mm_has
df[1,2] <- asth_has
df[2,1] <- mm_doesNot
df[2,2] <- asth_doesNot
tab <- table(df$control,df$case)
tB
tab
row.names(df)
df$control
?table
as.table(mm_has,asth_has)
table(as.matrix(fw)[1,], as.matrix(fw)[2,], dnn = c(‘Taw’, ‘Torridge’))
table(as.matrix(fw)[1,], as.matrix(fw)[2,], dnn = c("Taw", "Torridge"))
smoke <- matrix(c(51,43,22,92,28,21,68,22,9),ncol=3,byrow=TRUE)
colnames(smoke) <- c("High","Low","Middle")
rownames(smoke) <- c("current","former","never")
smoke
smoke <- matrix(c(51,43,22,92),ncol=2,byrow=TRUE)
colnames(smoke) <- c("control","case")
rownames(smoke) <- c("hasVariant","doesNot")
smoke
tab<- matrix(c(mm_has,asth_has,mm_doesNot,asth_doesNot),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
tab
chisq.test(tab)
mm_subjs
tab<- matrix(c(75,asth_has,800,asth_doesNot),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
chisq.test(tab)
tab<- matrix(c(175,asth_has,700,asth_doesNot),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
chisq.test(tab)
test_result <- chisq.test(tab)
test_result$statistic
tab<- matrix(c(175,asth_has,700,asth_doesNot),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result$statistic
test_result$p.value
tab<- matrix(c(275,asth_has,600,asth_doesNot),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result$p.value
asth_has
asth_doesNot
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText('Chi-square test statistic:'),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
num()$p.value
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText('Chi-square test statistic:'),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
"p-value"
num()$p.value
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText('Chi-square test statistic:'),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
x <- paste0("p-value: ",num()$p.value)
# num()$p.value
x
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText('Chi-square test statistic:'),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
x <- paste0("ChiSq statistic: ",num()$statistic,"p-value: ",num()$p.value)
# num()$p.value
x
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText('Chi-square test statistic:'),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
x <- paste0("ChiSq statistic: ",num()$statistic,"\n","p-value: ",num()$p.value)
# num()$p.value
x
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText('Chi-square test statistic:'),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
x <- paste0("ChiSq statistic: ",num()$statistic,"\\n","p-value: ",num()$p.value)
# num()$p.value
x
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText('Chi-square test statistic:'),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
x <- paste0("ChiSq statistic: ",num()$statistic,"  ","p-value: ",num()$p.value)
# num()$p.value
x
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText(strong('Chi-square test statistic:')),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
# str(sapply(sprintf('e%d', 0:7), function(id) {
#   input[[id]]
# }, simplify = FALSE))
#input[['e2']]
#input[['vid']]
x <- paste0("ChiSq statistic: ",num()$statistic,"  ","p-value: ",num()$p.value)
# num()$p.value
x
})
}
)
library(shiny)
getChiSqStatistic <- function(ptest1,ptest2) {
tab<- matrix(c(275,68,600,50),ncol=2,byrow=TRUE)
colnames(tab) <- c("control","case")
rownames(tab) <- c("hasVariant","doesNot")
test_result <- chisq.test(tab)
test_result
}
shinyApp(
ui <- fluidPage(
title = 'Selectize examples',
sidebarLayout(
sidebarPanel(
textInput("vid", "Variant input:", "22:200200:200201:T"),
selectInput(
'e0', 'Case', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"),
selectize = FALSE
),
selectizeInput(
'e2', 'Control', choices = c("Asthma","Crohn","Multiple_Myeloma","Multiple_Sclerosis","Psoriasis","Rheumatoid_Arthritis","T2D","Ulcerative_Colitis"), multiple = TRUE
),
actionButton("action2", "Submit", class = "btn-primary")
),
mainPanel(
helpText(strong('Chi-square test statistic:')),
verbatimTextOutput('ex_out')
)
)
),
server <- function(input, output,session) {
num <- eventReactive(input$action2,{
req(input$e2)
getChiSqStatistic(input$e0,input$e2)
})
output$ex_out <- renderPrint({
testResult <- paste0("ChiSq statistic: ",num()$statistic,"  ","p-value: ",num()$p.value)
testResult
})
}
)
runApp('~/Documents/SDTMinator')
runApp('~/Documents/SDTMinator')
runApp('~/Documents/SDTMinator')
runApp('~/Documents/SDTMinator')
runApp('~/Documents/SDTMinator')
runApp('~/Documents/SDTMinator')
runApp('~/Documents/SDTMinator')
